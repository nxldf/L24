<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="About_me" xml:space="preserve">
    <value>About Me</value>
  </data>
  <data name="AccountHolder" xml:space="preserve">
    <value>Account Holder</value>
  </data>
  <data name="AccountNumber" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="accountValue" xml:space="preserve">
    <value>you have {0} in your account</value>
  </data>
  <data name="Account_info" xml:space="preserve">
    <value>Account Information</value>
  </data>
  <data name="Address_Identification" xml:space="preserve">
    <value>Address and Identification</value>
  </data>
  <data name="Agency" xml:space="preserve">
    <value>Agency</value>
  </data>
  <data name="Artwork" xml:space="preserve">
    <value>Artwork</value>
  </data>
  <data name="Back_to_profile" xml:space="preserve">
    <value>Back to Profile</value>
  </data>
  <data name="BankName" xml:space="preserve">
    <value>Bank Name</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Card Number</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Collections" xml:space="preserve">
    <value>Collections</value>
  </data>
  <data name="Collector" xml:space="preserve">
    <value>Collector</value>
  </data>
  <data name="Confirm_password" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Create_collection" xml:space="preserve">
    <value>Create a New Collection</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education</value>
  </data>
  <data name="Email_address" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="Exhibitions" xml:space="preserve">
    <value>Exhibitions</value>
  </data>
  <data name="Facebook" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="Favorites" xml:space="preserve">
    <value>Favorites</value>
  </data>
  <data name="First_Name" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Google_plus" xml:space="preserve">
    <value>Google Plus</value>
  </data>
  <data name="GovermentID_p1" xml:space="preserve">
    <value>We checking ID for fraudulent, fake or defaced cards, so we must receive a copy of your government issued ID (for instance your passport or driver’s license) to be able to put your work for sale.
Do not worry! We protect the file you have sent us. The file will be encrypted from the moment that you sent it. We keep your encrypted file on our servers and can only our administrative team can view it.</value>
  </data>
  <data name="GovermentID_p2" xml:space="preserve">
    <value>For more information, please check our </value>
  </data>
  <data name="GovermentID_p3" xml:space="preserve">
    <value>If promoting your art under a pseudonym or nickname, you need to enter your LEGAL name below. We won't make this information public.</value>
  </data>
  <data name="GovermentID_privacyPolicy" xml:space="preserve">
    <value>Privacy Policy.</value>
  </data>
  <data name="GovermentID_title" xml:space="preserve">
    <value>Agreement</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Identification_header" xml:space="preserve">
    <value>Artwork Pick Up Address</value>
  </data>
  <data name="Identification_header2" xml:space="preserve">
    <value>Government Issued Identification</value>
  </data>
  <data name="Identification_p" xml:space="preserve">
    <value>When you add a new artwork, we will autofill your address with this information.</value>
  </data>
  <data name="Identification_p2" xml:space="preserve">
    <value>In order to pay you for art sales we need a digital copy of your government issued identification. This will help us ensure that your commissions are paid out in a timely manner.</value>
  </data>
  <data name="Instagram" xml:space="preserve">
    <value>Instagram</value>
  </data>
  <data name="Last_name" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Mailing_list" xml:space="preserve">
    <value>Mailing List</value>
  </data>
  <data name="Manage_artworks" xml:space="preserve">
    <value>Manage Artworks</value>
  </data>
  <data name="My_website" xml:space="preserve">
    <value>My Website</value>
  </data>
  <data name="New_password" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="Notpayed" xml:space="preserve">
    <value>Not payed</value>
  </data>
  <data name="No_file_chosen" xml:space="preserve">
    <value>No file chosen</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="Password_desc_1" xml:space="preserve">
    <value>Password should be more than 6 characters.</value>
  </data>
  <data name="Password_desc_2" xml:space="preserve">
    <value>Use a combination of characters, numbers and punctuations.</value>
  </data>
  <data name="Password_desc_3" xml:space="preserve">
    <value>Passwords are case sensitive.</value>
  </data>
  <data name="Payed" xml:space="preserve">
    <value>Payed</value>
  </data>
  <data name="pending" xml:space="preserve">
    <value>pending</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>PhoneNumber</value>
  </data>
  <data name="Pinterest" xml:space="preserve">
    <value>Pinterest</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ProfileInfo_header" xml:space="preserve">
    <value>Links</value>
  </data>
  <data name="ProfileInfo_header2" xml:space="preserve">
    <value>Personal Information</value>
  </data>
  <data name="ProfileInfo_p1" xml:space="preserve">
    <value>We'll add icons with links to any of the below sites that you provide.</value>
  </data>
  <data name="ProfileInfo_p2" xml:space="preserve">
    <value>Share with collectors here about who you are, where you've studied, and any upcoming or past events and exhibitions.</value>
  </data>
  <data name="Profile_address" xml:space="preserve">
    <value>Profile Address</value>
  </data>
  <data name="Profile_image" xml:space="preserve">
    <value>Profile Image</value>
  </data>
  <data name="Profile_information" xml:space="preserve">
    <value>Profile information</value>
  </data>
  <data name="Profile_type" xml:space="preserve">
    <value>Profile Type</value>
  </data>
  <data name="Receive_Art_Uploaded_Email" xml:space="preserve">
    <value>Receive Art Uploaded Email</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="Requestpayout" xml:space="preserve">
    <value>Request Payout</value>
  </data>
  <data name="Sales_Dashboard" xml:space="preserve">
    <value>Sales Dashboard</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Save_changes" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="Select_file" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Tax_form" xml:space="preserve">
    <value>Tax Form</value>
  </data>
  <data name="Tumblr" xml:space="preserve">
    <value>Tumblr</value>
  </data>
  <data name="Twitter" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Upload_art" xml:space="preserve">
    <value>Upload Art</value>
  </data>
  <data name="Upload_id" xml:space="preserve">
    <value>Upload ID</value>
  </data>
  <data name="Upload_photo_header" xml:space="preserve">
    <value>Update Profile Image</value>
  </data>
  <data name="Upload_photo_p" xml:space="preserve">
    <value>Select an image to upload.</value>
  </data>
  <data name="ZipCode" xml:space="preserve">
    <value>ZipCode</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TotalPrice" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>type</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Collection_description" xml:space="preserve">
    <value>Collection Description</value>
  </data>
  <data name="Collection_title" xml:space="preserve">
    <value>Collection Title</value>
  </data>
  <data name="My_collections" xml:space="preserve">
    <value>My Collections</value>
  </data>
  <data name="Private" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="Community" xml:space="preserve">
    <value>Community</value>
  </data>
  <data name="Portfolio" xml:space="preserve">
    <value>Portfolio</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="GovermentID_p3_continue" xml:space="preserve">
    <value />
  </data>
  <data name="DeleteCollection_msg" xml:space="preserve">
    <value>Are you sure you want to delete this collection? This cannot be undone.</value>
  </data>
  <data name="Payout_Error" xml:space="preserve">
    <value>There is a pending payout request. Please complete the prior request before applying a new one.</value>
  </data>
  <data name="Payouts" xml:space="preserve">
    <value>Payouts</value>
  </data>
  <data name="IDConfirmText" xml:space="preserve">
    <value>Your ID has been confirmed</value>
  </data>
</root>